:tocdepth: 1



.. _account_invoice_credit_invoice_init:

Credit Invoice Init
===================
:Model Name: ``account.invoice.credit_invoice.init``
:Base Module: :ref:`account_invoice_module`

The *Credit Invoice Init*-model introduces the conception of ...

.. _account_invoice_credit_invoice_init_fields:

Fields
------


.. _account_invoice_account_invoice_credit_invoice_init_with_refund:

:guilabel:`With Refund`:
    :Internal Name: ``with_refund``
    :Type: :ref:`field_type_boolean`

    If true, the current invoice(s) will be paid.




.. _account_invoice:

Invoice
=======
:Model Name: ``account.invoice``
:Base Module: :ref:`account_invoice_module`

:Menu:
    :menuselection:`Financial --> Invoices --> All Invoices`

    :menuselection:`Financial --> Invoices --> Credit Notes`

    :menuselection:`Financial --> Invoices --> Credit Notes --> Draft Credit
    Notes`

    :menuselection:`Financial --> Invoices --> Credit Notes --> Opened Credit
    Notes`

    :menuselection:`Financial --> Invoices --> Credit Notes --> Pro Forma
    Credit Notes`

    :menuselection:`Financial --> Invoices --> Invoices`

    :menuselection:`Financial --> Invoices --> Invoices --> Draft Invoices`

    :menuselection:`Financial --> Invoices --> Invoices --> Opened Invoices`

    :menuselection:`Financial --> Invoices --> Invoices --> Pro Forma
    Invoices`

    :menuselection:`Financial --> Invoices --> Supplier Credit Notes`

    :menuselection:`Financial --> Invoices --> Supplier Credit Notes --> Draft
    Supplier Credit Notes`

    :menuselection:`Financial --> Invoices --> Supplier Credit Notes -->
    Opened Supplier Credit Notes`

    :menuselection:`Financial --> Invoices --> Supplier Credit Notes --> Pro
    Forma Supplier Credit Notes`

    :menuselection:`Financial --> Invoices --> Supplier Invoices`

    :menuselection:`Financial --> Invoices --> Supplier Invoices --> Draft
    Supplier Invoices`

    :menuselection:`Financial --> Invoices --> Supplier Invoices --> Opened
    Supplier Invoices`

    :menuselection:`Financial --> Invoices --> Supplier Invoices --> Pro Forma
    Supplier Invoices`

The *Invoice*-model introduces the conception of ...

.. _account_invoice_fields:

Fields
------


.. _account_invoice_account_invoice_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_invoice_account_invoice_accounting_date:

:guilabel:`Accounting Date`:
    :Internal Name: ``accounting_date``
    :Type: :ref:`field_type_date`

    The *Accounting Date*-field is used to store ...




.. _account_invoice_account_invoice_amount_to_pay:

:guilabel:`Amount to Pay`:
    :Internal Name: ``amount_to_pay``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Amount to Pay*-field is used to store ...




.. _account_invoice_account_invoice_amount_to_pay_today:

:guilabel:`Amount to Pay Today`:
    :Internal Name: ``amount_to_pay_today``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Amount to Pay Today*-field is used to store ...




.. _account_invoice_account_invoice_comment:

:guilabel:`Comment`:
    :Internal Name: ``comment``
    :Type: :ref:`field_type_text`

    The *Comment*-field is used to store ...




.. _account_invoice_account_invoice_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_invoice_account_invoice_currency:

:guilabel:`Currency`:
    :Internal Name: ``currency``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The *Currency*-field is used to store ...




.. _account_invoice_account_invoice_currency_digits:

:guilabel:`Currency Digits`:
    :Internal Name: ``currency_digits``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Currency Digits*-field is used to store ...




.. _account_invoice_account_invoice_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Type: :ref:`field_type_char`

    The *Description*-field is used to store ...




.. _account_invoice_account_invoice_invoice_address:

:guilabel:`Invoice Address`:
    :Internal Name: ``invoice_address``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`party_address`

    The *Invoice Address*-field is used to store ...




.. _account_invoice_account_invoice_invoice_date:

:guilabel:`Invoice Date`:
    :Internal Name: ``invoice_date``
    :Type: :ref:`field_type_date`

    The *Invoice Date*-field is used to store ...




.. _account_invoice_account_invoice_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_invoice_account_invoice_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_invoice_line`

    The *Lines*-field is used to store ...




.. _account_invoice_account_invoice_move:

:guilabel:`Move`:
    :Internal Name: ``move``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_move`

    The *Move*-field is used to store ...




.. _account_invoice_account_invoice_number:

:guilabel:`Number`:
    :Internal Name: ``number``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_char`

    The *Number*-field is used to store ...




.. _account_invoice_account_invoice_party:

:guilabel:`Party`:
    :Internal Name: ``party``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`party_party`

    The *Party*-field is used to store ...




.. _account_invoice_account_invoice_party_lang:

:guilabel:`Party Language`:
    :Internal Name: ``party_lang``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_char`

    The *Party Language*-field is used to store ...




.. _account_invoice_account_invoice_payment_lines:

:guilabel:`Payment Lines`:
    :Internal Name: ``payment_lines``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_move_line`

    The *Payment Lines*-field is used to store ...




.. _account_invoice_account_invoice_payment_term:

:guilabel:`Payment Term`:
    :Internal Name: ``payment_term``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_invoice_payment_term`

    The *Payment Term*-field is used to store ...




.. _account_invoice_account_invoice_reconciled:

:guilabel:`Reconciled`:
    :Internal Name: ``reconciled``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_boolean`

    The *Reconciled*-field is used to store ...




.. _account_invoice_account_invoice_reference:

:guilabel:`Reference`:
    :Internal Name: ``reference``
    :Type: :ref:`field_type_char`

    The *Reference*-field is used to store ...




.. _account_invoice_account_invoice_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Draft`
    * :guilabel:`Pro forma`
    * :guilabel:`Opened`
    * :guilabel:`Paid`
    * :guilabel:`Canceled`

    The *State*-field is used to store ...




.. _account_invoice_account_invoice_tax_amount:

:guilabel:`Tax`:
    :Internal Name: ``tax_amount``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Tax*-field is used to store ...




.. _account_invoice_account_invoice_taxes:

:guilabel:`Tax Lines`:
    :Internal Name: ``taxes``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_invoice_tax`

    The *Tax Lines*-field is used to store ...




.. _account_invoice_account_invoice_total_amount:

:guilabel:`Total`:
    :Internal Name: ``total_amount``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Total*-field is used to store ...




.. _account_invoice_account_invoice_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Invoice`
    * :guilabel:`Supplier Invoice`
    * :guilabel:`Credit Note`
    * :guilabel:`Supplier Credit Note`

    The *Type*-field is used to store ...




.. _account_invoice_account_invoice_untaxed_amount:

:guilabel:`Untaxed`:
    :Internal Name: ``untaxed_amount``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Untaxed*-field is used to store ...




Reports
--------
:guilabel:`Invoice`:
    Invoice
    The *Invoice*-Report is based on style ``company/header_A4.odt``.


Wizards
-------
:guilabel:`Credit`:
    
:guilabel:`Invoice`:
    
:guilabel:`Pay Invoice`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


:ref:`res_user`\ s being member of :ref:`res_group` "Purchase" have the
following access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden


:ref:`res_user`\ s being member of :ref:`res_group` "Sales" have the following
access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_invoice_line:

Invoice Line
============
:Model Name: ``account.invoice.line``
:Base Module: :ref:`account_invoice_module`

:Menu:
    :menuselection:`Financial --> Invoices --> Credit Notes --> Credit Note
    Lines`

    :menuselection:`Financial --> Invoices --> Invoices --> Invoice Lines`

    :menuselection:`Financial --> Invoices --> Supplier Credit Notes -->
    Supplier Credit Note Lines`

    :menuselection:`Financial --> Invoices --> Supplier Invoices --> Supplier
    Invoice Lines`

The *Invoice Line*-model introduces the conception of ...

.. _account_invoice_line_fields:

Fields
------


.. _account_invoice_account_invoice_line_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_invoice_account_invoice_line_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Amount*-field is used to store ...




.. _account_invoice_account_invoice_line_analytic_accounts:

:guilabel:`Analytic Accounts`:
    :Internal Name: ``analytic_accounts``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`analytic_account_account_selection`
    :Base Module: :ref:`analytic_invoice_module`

    The *Analytic Accounts*-field is used to store ...




.. _account_invoice_account_invoice_line_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_invoice_account_invoice_line_currency:

:guilabel:`Currency`:
    :Internal Name: ``currency``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The *Currency*-field is used to store ...




.. _account_invoice_account_invoice_line_currency_digits:

:guilabel:`Currency Digits`:
    :Internal Name: ``currency_digits``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Currency Digits*-field is used to store ...




.. _account_invoice_account_invoice_line_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_text`

    The *Description*-field is used to store ...




.. _account_invoice_account_invoice_line_invoice:

:guilabel:`Invoice`:
    :Internal Name: ``invoice``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_invoice`

    The *Invoice*-field is used to store ...




.. _account_invoice_account_invoice_line_invoice_type:

:guilabel:`Invoice Type`:
    :Internal Name: ``invoice_type``
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Invoice`
    * :guilabel:`Supplier Invoice`
    * :guilabel:`Credit Note`
    * :guilabel:`Supplier Credit Note`

    The *Invoice Type*-field is used to store ...




.. _account_invoice_account_invoice_line_note:

:guilabel:`Note`:
    :Internal Name: ``note``
    :Type: :ref:`field_type_text`

    The *Note*-field is used to store ...




.. _account_invoice_account_invoice_line_party:

:guilabel:`Party`:
    :Internal Name: ``party``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`party_party`

    The *Party*-field is used to store ...




.. _account_invoice_account_invoice_line_party_lang:

:guilabel:`Party Language`:
    :Internal Name: ``party_lang``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_char`

    The *Party Language*-field is used to store ...




.. _account_invoice_account_invoice_line_product:

:guilabel:`Product`:
    :Internal Name: ``product``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`product_product`

    The *Product*-field is used to store ...




.. _account_invoice_account_invoice_line_quantity:

:guilabel:`Quantity`:
    :Internal Name: ``quantity``
    :Type: :ref:`field_type_float`

    The *Quantity*-field is used to store ...




.. _account_invoice_account_invoice_line_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_invoice_account_invoice_line_taxes:

:guilabel:`Taxes`:
    :Internal Name: ``taxes``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_tax`

    The *Taxes*-field is used to store ...




.. _account_invoice_account_invoice_line_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Line`
    * :guilabel:`Subtotal`
    * :guilabel:`Title`
    * :guilabel:`Comment`

    The *Type*-field is used to store ...




.. _account_invoice_account_invoice_line_unit:

:guilabel:`Unit`:
    :Internal Name: ``unit``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`product_uom`

    The *Unit*-field is used to store ...




.. _account_invoice_account_invoice_line_unit_digits:

:guilabel:`Unit Digits`:
    :Internal Name: ``unit_digits``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Unit Digits*-field is used to store ...




.. _account_invoice_account_invoice_line_unit_price:

:guilabel:`Unit Price`:
    :Internal Name: ``unit_price``
    :Type: :ref:`field_type_numeric`

    The *Unit Price*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


:ref:`res_user`\ s being member of :ref:`res_group` "Purchase" have the
following access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden


:ref:`res_user`\ s being member of :ref:`res_group` "Sales" have the following
access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_invoice_tax:

Invoice Tax
===========
:Model Name: ``account.invoice.tax``
:Base Module: :ref:`account_invoice_module`

The *Invoice Tax*-model introduces the conception of ...

.. _account_invoice_tax_fields:

Fields
------


.. _account_invoice_account_invoice_tax_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_invoice_account_invoice_tax_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Type: :ref:`field_type_numeric`

    The *Amount*-field is used to store ...




.. _account_invoice_account_invoice_tax_base:

:guilabel:`Base`:
    :Internal Name: ``base``
    :Type: :ref:`field_type_numeric`

    The *Base*-field is used to store ...




.. _account_invoice_account_invoice_tax_base_code:

:guilabel:`Base Code`:
    :Internal Name: ``base_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Base Code*-field is used to store ...




.. _account_invoice_account_invoice_tax_base_sign:

:guilabel:`Base Sign`:
    :Internal Name: ``base_sign``
    :Type: :ref:`field_type_numeric`

    The *Base Sign*-field is used to store ...




.. _account_invoice_account_invoice_tax_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Description*-field is used to store ...




.. _account_invoice_account_invoice_tax_invoice:

:guilabel:`Invoice`:
    :Internal Name: ``invoice``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_invoice`

    The *Invoice*-field is used to store ...




.. _account_invoice_account_invoice_tax_manual:

:guilabel:`Manual`:
    :Internal Name: ``manual``
    :Type: :ref:`field_type_boolean`

    The *Manual*-field is used to store ...




.. _account_invoice_account_invoice_tax_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_invoice_account_invoice_tax_tax:

:guilabel:`Tax`:
    :Internal Name: ``tax``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax`

    The *Tax*-field is used to store ...




.. _account_invoice_account_invoice_tax_tax_code:

:guilabel:`Tax Code`:
    :Internal Name: ``tax_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Tax Code*-field is used to store ...




.. _account_invoice_account_invoice_tax_tax_sign:

:guilabel:`Tax Sign`:
    :Internal Name: ``tax_sign``
    :Type: :ref:`field_type_numeric`

    The *Tax Sign*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_invoice_pay_invoice_ask:

Pay Invoice Ask
===============
:Model Name: ``account.invoice.pay_invoice.ask``
:Base Module: :ref:`account_invoice_module`

The *Pay Invoice Ask*-model introduces the conception of ...

.. _account_invoice_pay_invoice_ask_fields:

Fields
------


.. _account_invoice_account_invoice_pay_invoice_ask_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_date:

:guilabel:`Date`:
    :Internal Name: ``date``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_date`

    The *Date*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_char`

    The *Description*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_invoice:

:guilabel:`Invoice`:
    :Internal Name: ``invoice``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_invoice`

    The *Invoice*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_invoice_pay_invoice_ask`

    The *Lines*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_amount:

:guilabel:`Payment Amount`:
    :Internal Name: ``amount``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Payment Amount*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_currency:

:guilabel:`Payment Currency`:
    :Internal Name: ``currency``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The *Payment Currency*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_currency_digits:

:guilabel:`Payment Currency Digits`:
    :Internal Name: ``currency_digits``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Payment Currency Digits*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_payment_lines:

:guilabel:`Payment Lines`:
    :Internal Name: ``payment_lines``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_invoice_pay_invoice_ask`

    The *Payment Lines*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Write-Off`
    * :guilabel:`Partial Payment`

    The *Type*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_account_writeoff:

:guilabel:`Write-Off Account`:
    :Internal Name: ``account_writeoff``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Write-Off Account*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_amount_writeoff:

:guilabel:`Write-Off Amount`:
    :Internal Name: ``amount_writeoff``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Write-Off Amount*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_currency_writeoff:

:guilabel:`Write-Off Currency`:
    :Internal Name: ``currency_writeoff``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The *Write-Off Currency*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_ask_journal_writeoff:

:guilabel:`Write-Off Journal`:
    :Internal Name: ``journal_writeoff``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Write-Off Journal*-field is used to store ...




.. _account_invoice_pay_invoice_init:

Pay Invoice Init
================
:Model Name: ``account.invoice.pay_invoice.init``
:Base Module: :ref:`account_invoice_module`

The *Pay Invoice Init*-model introduces the conception of ...

.. _account_invoice_pay_invoice_init_fields:

Fields
------


.. _account_invoice_account_invoice_pay_invoice_init_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Type: :ref:`field_type_numeric`

    The *Amount*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_init_currency:

:guilabel:`Currency`:
    :Internal Name: ``currency``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The *Currency*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_init_currency_digits:

:guilabel:`Currency Digits`:
    :Internal Name: ``currency_digits``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Currency Digits*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_init_date:

:guilabel:`Date`:
    :Internal Name: ``date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Date*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_init_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Description*-field is used to store ...




.. _account_invoice_account_invoice_pay_invoice_init_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_invoice_payment_term:

Payment Term
============
:Model Name: ``account.invoice.payment_term``
:Base Module: :ref:`account_invoice_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Payment Terms --> Payment
    Terms`

The *Payment Term*-model introduces the conception of ...

.. _account_invoice_payment_term_fields:

Fields
------


.. _account_invoice_account_invoice_payment_term_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_invoice_account_invoice_payment_term_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Type: :ref:`field_type_text`

    The *Description*-field is used to store ...




.. _account_invoice_account_invoice_payment_term_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_invoice_payment_term_line`

    The *Lines*-field is used to store ...




.. _account_invoice_account_invoice_payment_term_name:

:guilabel:`Payment Term`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Payment Term*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_invoice_payment_term_line:

Payment Term Line
=================
:Model Name: ``account.invoice.payment_term.line``
:Base Module: :ref:`account_invoice_module`

The *Payment Term Line*-model introduces the conception of ...

.. _account_invoice_payment_term_line_fields:

Fields
------


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_invoice_payment_term_line_delay:

Payment Term Line Delay
=======================
:Model Name: ``account.invoice.payment_term.line.delay``
:Base Module: :ref:`account_invoice_module`

The *Payment Term Line Delay*-model introduces the conception of ...

.. _account_invoice_payment_term_line_delay_fields:

Fields
------


.. _account_invoice_payment_term_line_type:

Payment Term Line Type
======================
:Model Name: ``account.invoice.payment_term.line.type``
:Base Module: :ref:`account_invoice_module`

The *Payment Term Line Type*-model introduces the conception of ...

.. _account_invoice_payment_term_line_type_fields:

Fields
------


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_invoice_print_invoice_report_warning:

Print Invoice Report Warning
============================
:Model Name: ``account.invoice.print_invoice_report.warning``
:Base Module: :ref:`account_invoice_module`

The *Print Invoice Report Warning*-model introduces the conception of ...

