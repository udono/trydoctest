:tocdepth: 1



.. _res_group:

Group
=====
:Model Name: ``res.group``
:Base Module: :ref:`res_module`

:Menu:
    :menuselection:`Administration --> Users --> Groups`

The *Group*-model introduces the conception of ...

.. _res_group_fields:

Fields
------


.. _res_res_group_field_access:

:guilabel:`Access Field`:
    :Internal Name: ``field_access``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`ir_model_field_access`

    The *Access Field*-field is used to store ...




.. _res_res_group_menu_access:

:guilabel:`Access Menu`:
    :Internal Name: ``menu_access``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`ir_ui_menu`

    The *Access Menu*-field is used to store ...




.. _res_res_group_model_access:

:guilabel:`Access Model`:
    :Internal Name: ``model_access``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`ir_model_access`

    The *Access Model*-field is used to store ...




.. _res_res_group_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _res_res_group_rule_groups:

:guilabel:`Rules`:
    :Internal Name: ``rule_groups``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`ir_rule_group`

    The *Rules*-field is used to store ...




.. _res_res_group_users:

:guilabel:`Users`:
    :Internal Name: ``users``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`res_user`

    The *Users*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Administration" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _res_request:

Request
=======
:Model Name: ``res.request``
:Base Module: :ref:`res_module`

:Menu:
    :menuselection:`Administration --> Users --> Requests`

The *Request*-model introduces the conception of ...

.. _res_request_fields:

Fields
------


.. _res_res_request_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _res_res_request_body:

:guilabel:`Body`:
    :Internal Name: ``body``
    :Type: :ref:`field_type_text`

    The *Body*-field is used to store ...




.. _res_res_request_act_from:

:guilabel:`From`:
    :Internal Name: ``act_from``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`res_user`

    The *From*-field is used to store ...




.. _res_res_request_history:

:guilabel:`History`:
    :Internal Name: ``history``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`res_request_history`

    The *History*-field is used to store ...




.. _res_res_request_number_references:

:guilabel:`Number of References`:
    :Internal Name: ``number_references``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Number of References*-field is used to store ...




.. _res_res_request_priority:

:guilabel:`Priority`:
    :Internal Name: ``priority``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Low`
    * :guilabel:`Normal`
    * :guilabel:`High`

    The *Priority*-field is used to store ...




.. _res_res_request_references:

:guilabel:`References`:
    :Internal Name: ``references``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`res_request_reference`

    The *References*-field is used to store ...




.. _res_res_request_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Draft`
    * :guilabel:`Waiting`
    * :guilabel:`Chatting`
    * :guilabel:`Closed`

    The *State*-field is used to store ...




.. _res_res_request_name:

:guilabel:`Subject`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Subject*-field is used to store ...




.. _res_res_request_act_to:

:guilabel:`To`:
    :Internal Name: ``act_to``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`res_user`

    The *To*-field is used to store ...




.. _res_res_request_trigger_date:

:guilabel:`Trigger Date`:
    :Internal Name: ``trigger_date``
    :Type: :ref:`field_type_datetime`

    The *Trigger Date*-field is used to store ...




.. _res_request_history:

Request history
===============
:Model Name: ``res.request.history``
:Base Module: :ref:`res_module`

The *Request history*-model introduces the conception of ...

.. _res_request_history_fields:

Fields
------


.. _res_res_request_history_body:

:guilabel:`Body`:
    :Internal Name: ``body``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_text`

    The *Body*-field is used to store ...




.. _res_res_request_history_date_sent:

:guilabel:`Date sent`:
    :Internal Name: ``date_sent``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_datetime`

    The *Date sent*-field is used to store ...




.. _res_res_request_history_act_from:

:guilabel:`From`:
    :Internal Name: ``act_from``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`res_user`

    The *From*-field is used to store ...




.. _res_res_request_history_priority:

:guilabel:`Priority`:
    :Internal Name: ``priority``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Low`
    * :guilabel:`Normal`
    * :guilabel:`High`

    The *Priority*-field is used to store ...




.. _res_res_request_history_number_references:

:guilabel:`References`:
    :Internal Name: ``number_references``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *References*-field is used to store ...




.. _res_res_request_history_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Draft`
    * :guilabel:`Waiting`
    * :guilabel:`Chatting`
    * :guilabel:`Closed`

    The *State*-field is used to store ...




.. _res_res_request_history_subject:

:guilabel:`Subject`:
    :Internal Name: ``subject``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_char`

    The *Subject*-field is used to store ...




.. _res_res_request_history_name:

:guilabel:`Summary`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_char`

    The *Summary*-field is used to store ...




.. _res_res_request_history_act_to:

:guilabel:`To`:
    :Internal Name: ``act_to``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`res_user`

    The *To*-field is used to store ...




.. _res_request_link:

Request link
============
:Model Name: ``res.request.link``
:Base Module: :ref:`res_module`

:Menu:
    :menuselection:`Administration --> Users --> Request Links`

The *Request link*-model introduces the conception of ...

.. _res_request_link_fields:

Fields
------


.. _res_res_request_link_model:

:guilabel:`Model`:
    :Internal Name: ``model``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`

    The *Model*-field is used to store ...




.. _res_res_request_link_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _res_res_request_link_priority:

:guilabel:`Priority`:
    :Internal Name: ``priority``
    :Type: :ref:`field_type_integer`

    The *Priority*-field is used to store ...




.. _res_request_reference:

Request Reference
=================
:Model Name: ``res.request.reference``
:Base Module: :ref:`res_module`

The *Request Reference*-model introduces the conception of ...

.. _res_request_reference_fields:

Fields
------


.. _res_res_request_reference_reference:

:guilabel:`Reference`:
    :Internal Name: ``reference``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_reference`

    The *Reference*-field is used to store ...




.. _res_res_request_reference_request:

:guilabel:`Request`:
    :Internal Name: ``request``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`res_request`

    The *Request*-field is used to store ...




.. _res_user:

User
====
:Model Name: ``res.user``
:Base Module: :ref:`res_module`

:Menu:
    :menuselection:`Administration --> Users --> Users`

The *User*-model introduces the conception of ...

.. _res_user_fields:

Fields
------


.. _res_res_user_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _res_res_user_connections:

:guilabel:`Connections`:
    :Internal Name: ``connections``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_integer`

    The *Connections*-field is used to store ...




.. _res_res_user_company:

:guilabel:`Current Company`:
    :Internal Name: ``company``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`
    :Base Module: :ref:`company_module`

    The *Current Company*-field is used to store ...




.. _res_res_user_dashboard_actions:

:guilabel:`Dashboard Actions`:
    :Internal Name: ``dashboard_actions``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`dashboard_action`
    :Base Module: :ref:`dashboard_module`

    The *Dashboard Actions*-field is used to store ...




.. _res_res_user_dashboard_layout:

:guilabel:`Dashboard Layout`:
    :Internal Name: ``dashboard_layout``
    :Type: :ref:`field_type_selection`
    :Base Module: :ref:`dashboard_module`


    The following options are available:

    * :guilabel:`Square`
    * :guilabel:`Stack Right`
    * :guilabel:`Stack Left`
    * :guilabel:`Stack Top`
    * :guilabel:`Stack Bottom`

    The *Dashboard Layout*-field is used to store ...




.. _res_res_user_email:

:guilabel:`Email`:
    :Internal Name: ``email``
    :Type: :ref:`field_type_char`

    The *Email*-field is used to store ...




.. _res_res_user_employee:

:guilabel:`Employee`:
    :Internal Name: ``employee``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_employee`
    :Base Module: :ref:`company_module`

    The *Employee*-field is used to store ...




.. _res_res_user_groups:

:guilabel:`Groups`:
    :Internal Name: ``groups``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`res_group`

    The *Groups*-field is used to store ...




.. _res_res_user_action:

:guilabel:`Home Action`:
    :Internal Name: ``action``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_action`

    The *Home Action*-field is used to store ...




.. _res_res_user_language:

:guilabel:`Language`:
    :Internal Name: ``language``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_lang`

    The *Language*-field is used to store ...




.. _res_res_user_login:

:guilabel:`Login`:
    :Internal Name: ``login``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Login*-field is used to store ...




.. _res_res_user_main_company:

:guilabel:`Main Company`:
    :Internal Name: ``main_company``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`
    :Base Module: :ref:`company_module`

    The *Main Company*-field is used to store ...




.. _res_res_user_menu:

:guilabel:`Menu Action`:
    :Internal Name: ``menu``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_action`

    The *Menu Action*-field is used to store ...




.. _res_res_user_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _res_res_user_password:

:guilabel:`Password`:
    :Internal Name: ``password``
    :Type: :ref:`field_type_sha`

    The *Password*-field is used to store ...




.. _res_res_user_rule_groups:

:guilabel:`Rules`:
    :Internal Name: ``rule_groups``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`ir_rule_group`

    The *Rules*-field is used to store ...




.. _res_res_user_signature:

:guilabel:`Signature`:
    :Internal Name: ``signature``
    :Type: :ref:`field_type_text`

    The *Signature*-field is used to store ...




.. _res_res_user_timezone:

:guilabel:`Timezone`:
    :Internal Name: ``timezone``
    :Type: :ref:`field_type_selection`

    The *Timezone*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Administration" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _res_user_config_init:

User Config Init
================
:Model Name: ``res.user.config.init``
:Base Module: :ref:`res_module`

The *User Config Init*-model introduces the conception of ...



.. _res_user_warning:

User Warning
============
:Model Name: ``res.user.warning``
:Base Module: :ref:`res_module`

The *User Warning*-model introduces the conception of ...

.. _res_user_warning_fields:

Fields
------


.. _res_res_user_warning_always:

:guilabel:`Always`:
    :Internal Name: ``always``
    :Type: :ref:`field_type_boolean`

    The *Always*-field is used to store ...




.. _res_res_user_warning_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _res_res_user_warning_user:

:guilabel:`User`:
    :Internal Name: ``user``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`res_user`

    The *User*-field is used to store ...


