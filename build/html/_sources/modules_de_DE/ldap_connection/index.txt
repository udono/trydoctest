:tocdepth: 1



.. _ldap_connection:

LDAP Connection
===============
:Model Name: ``ldap.connection``
:Base Module: :ref:`ldap_connection_module`

:Menu:
    :menuselection:`Administration --> LDAP --> Connection`

The *LDAP Connection*-model introduces the conception of ...

.. _ldap_connection_fields:

Fields
------


.. _ldap_connection_ldap_connection_active_directory:

:guilabel:`Active Directory`:
    :Internal Name: ``active_directory``
    :Type: :ref:`field_type_boolean`

    The *Active Directory*-field is used to store ...




.. _ldap_connection_ldap_connection_auth_base_dn:

:guilabel:`Base DN`:
    :Internal Name: ``auth_base_dn``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`
    :Base Module: :ref:`ldap_authentication_module`

    Base DN for authentication




.. _ldap_connection_ldap_connection_bind_dn:

:guilabel:`Bind DN`:
    :Internal Name: ``bind_dn``
    :Type: :ref:`field_type_char`

    LDAP DN used to bind




.. _ldap_connection_ldap_connection_bind_pass:

:guilabel:`Bind Pass`:
    :Internal Name: ``bind_pass``
    :Type: :ref:`field_type_char`

    LDAP password used to bind




.. _ldap_connection_ldap_connection_auth_create_user:

:guilabel:`Create User`:
    :Internal Name: ``auth_create_user``
    :Type: :ref:`field_type_boolean`
    :Base Module: :ref:`ldap_authentication_module`

    Create user if not in database




.. _ldap_connection_ldap_connection_port:

:guilabel:`Port`:
    :Internal Name: ``port``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_integer`

    LDAP server port




.. _ldap_connection_ldap_connection_auth_require_filter:

:guilabel:`Require Filter`:
    :Internal Name: ``auth_require_filter``
    :Type: :ref:`field_type_char`
    :Base Module: :ref:`ldap_authentication_module`

    The *Require Filter*-field is used to store ...




.. _ldap_connection_ldap_connection_auth_scope:

:guilabel:`Scope`:
    :Internal Name: ``auth_scope``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`
    :Base Module: :ref:`ldap_authentication_module`


    The following options are available:

    * :guilabel:`Base`
    * :guilabel:`OneLevel`
    * :guilabel:`Subtree`

    The *Scope*-field is used to store ...




.. _ldap_connection_ldap_connection_secure:

:guilabel:`Secure`:
    :Internal Name: ``secure``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Never`
    * :guilabel:`SSL`
    * :guilabel:`TLS`

    LDAP secure connection




.. _ldap_connection_ldap_connection_server:

:guilabel:`Server`:
    :Internal Name: ``server``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    LDAP server name




.. _ldap_connection_ldap_connection_auth_uid:

:guilabel:`UID`:
    :Internal Name: ``auth_uid``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`
    :Base Module: :ref:`ldap_authentication_module`

    UID Attribute for authentication




Wizards
-------
:guilabel:`Test LDAP Connection`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Administration" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _ldap_test_connection_init:

Test Connection - Init
======================
:Model Name: ``ldap.test_connection.init``
:Base Module: :ref:`ldap_connection_module`

The *Test Connection - Init*-model introduces the conception of ...

