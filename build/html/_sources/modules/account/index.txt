:tocdepth: 1



.. _account_account:

Account
=======
:Model Name: ``account.account``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> General Account -->
    Accounts`

    :menuselection:`Financial --> Configuration --> General Account -->
    Accounts --> Accounts`

The *Account*-model introduces the conception of ...

.. _account_account_fields:

Fields
------


.. _account_account_account_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_account_account_balance:

:guilabel:`Balance`:
    :Internal Name: ``balance``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Balance*-field is used to store ...




.. _account_account_account_childs:

:guilabel:`Children`:
    :Internal Name: ``childs``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_account`

    The children records in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_account_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_account_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_credit:

:guilabel:`Credit`:
    :Internal Name: ``credit``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Credit*-field is used to store ...




.. _account_account_account_currency:

:guilabel:`Currency`:
    :Internal Name: ``currency``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The *Currency*-field is used to store ...




.. _account_account_account_debit:

:guilabel:`Debit`:
    :Internal Name: ``debit``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Debit*-field is used to store ...




.. _account_account_account_taxes:

:guilabel:`Default Taxes`:
    :Internal Name: ``taxes``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_tax`

    Default tax for manual encoding of move lines  for journal types:
    "expense" and "revenue"




.. _account_account_account_deferral:

:guilabel:`Deferral`:
    :Internal Name: ``deferral``
    :Type: :ref:`field_type_boolean`

    The *Deferral*-field is used to store ...




.. _account_account_account_deferrals:

:guilabel:`Deferrals`:
    :Internal Name: ``deferrals``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_account_deferral`

    The *Deferrals*-field is used to store ...




.. _account_account_account_kind:

:guilabel:`Kind`:
    :Internal Name: ``kind``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Other`
    * :guilabel:`Payable`
    * :guilabel:`Revenue`
    * :guilabel:`Receivable`
    * :guilabel:`Expense`
    * :guilabel:`View`

    The *Kind*-field is used to store ...




.. _account_account_account_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_account_note:

:guilabel:`Note`:
    :Internal Name: ``note``
    :Type: :ref:`field_type_text`

    The *Note*-field is used to store ...




.. _account_account_account_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_account_reconcile:

:guilabel:`Reconcile`:
    :Internal Name: ``reconcile``
    :Type: :ref:`field_type_boolean`

    Allow move lines of this account  to be reconciled.




.. _account_account_account_second_currency:

:guilabel:`Secondary currency`:
    :Internal Name: ``second_currency``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    Force all moves for this account  to have this secondary currency.




.. _account_account_account_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_type`

    The *Type*-field is used to store ...




Wizards
-------
:guilabel:`Open Move Account`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_account_deferral:

Account Deferral
================
:Model Name: ``account.account.deferral``
:Base Module: :ref:`account_module`

The *Account Deferral*-model introduces the conception of ...

.. _account_account_deferral_fields:

Fields
------


.. _account_account_account_deferral_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_account_account_deferral_credit:

:guilabel:`Credit`:
    :Internal Name: ``credit``
    :Type: :ref:`field_type_numeric`

    The *Credit*-field is used to store ...




.. _account_account_account_deferral_debit:

:guilabel:`Debit`:
    :Internal Name: ``debit``
    :Type: :ref:`field_type_numeric`

    The *Debit*-field is used to store ...




.. _account_account_account_deferral_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_move:

Account Move
============
:Model Name: ``account.move``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Entries --> Account Moves`

The *Account Move*-model introduces the conception of ...

.. _account_move_fields:

Fields
------


.. _account_account_move_date:

:guilabel:`Effective Date`:
    :Internal Name: ``date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Effective Date*-field is used to store ...




.. _account_account_move_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_account_move_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_move_line`

    The *Lines*-field is used to store ...




.. _account_account_move_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_move_period:

:guilabel:`Period`:
    :Internal Name: ``period``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Period*-field is used to store ...




.. _account_account_move_post_date:

:guilabel:`Post Date`:
    :Internal Name: ``post_date``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_date`

    The *Post Date*-field is used to store ...




.. _account_account_move_reference:

:guilabel:`Reference`:
    :Internal Name: ``reference``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_char`

    Also known as Folio Number




.. _account_account_move_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Draft`
    * :guilabel:`Posted`

    The *State*-field is used to store ...




Reports
--------
:guilabel:`General Journal`:
    General Journal


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: forbidden


:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_move_line:

Account Move Line
=================
:Model Name: ``account.move.line``
:Base Module: :ref:`account_module`

The *Account Move Line*-model introduces the conception of ...

.. _account_move_line_fields:

Fields
------


.. _account_account_move_line_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_account_move_line_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_account_move_line_amount_second_currency:

:guilabel:`Amount Second Currency`:
    :Internal Name: ``amount_second_currency``
    :Type: :ref:`field_type_numeric`

    The amount expressed in a second currency




.. _account_account_move_line_analytic_lines:

:guilabel:`Analytic Lines`:
    :Internal Name: ``analytic_lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`analytic_account_line`
    :Base Module: :ref:`analytic_account_module`

    The *Analytic Lines*-field is used to store ...




.. _account_account_move_line_credit:

:guilabel:`Credit`:
    :Internal Name: ``credit``
    :Type: :ref:`field_type_numeric`

    The *Credit*-field is used to store ...




.. _account_account_move_line_debit:

:guilabel:`Debit`:
    :Internal Name: ``debit``
    :Type: :ref:`field_type_numeric`

    The *Debit*-field is used to store ...




.. _account_account_move_line_date:

:guilabel:`Effective Date`:
    :Internal Name: ``date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Effective Date*-field is used to store ...




.. _account_account_move_line_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_account_move_line_maturity_date:

:guilabel:`Maturity Date`:
    :Internal Name: ``maturity_date``
    :Type: :ref:`field_type_date`

    This field is used for payable and receivable lines.  You can put the
    limit date for the payment.




.. _account_account_move_line_move:

:guilabel:`Move`:
    :Internal Name: ``move``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_move`

    The *Move*-field is used to store ...




.. _account_account_move_line_move_state:

:guilabel:`Move State`:
    :Internal Name: ``move_state``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Draft`
    * :guilabel:`Posted`

    The *Move State*-field is used to store ...




.. _account_account_move_line_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_move_line_party:

:guilabel:`Party`:
    :Internal Name: ``party``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`party_party`

    The *Party*-field is used to store ...




.. _account_account_move_line_period:

:guilabel:`Period`:
    :Internal Name: ``period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Period*-field is used to store ...




.. _account_account_move_line_reconciliation:

:guilabel:`Reconciliation`:
    :Internal Name: ``reconciliation``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_move_reconciliation`

    The *Reconciliation*-field is used to store ...




.. _account_account_move_line_reference:

:guilabel:`Reference`:
    :Internal Name: ``reference``
    :Type: :ref:`field_type_char`

    The *Reference*-field is used to store ...




.. _account_account_move_line_second_currency:

:guilabel:`Second Currency`:
    :Internal Name: ``second_currency``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`currency_currency`

    The second currency




.. _account_account_move_line_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Draft`
    * :guilabel:`Valid`

    The *State*-field is used to store ...




.. _account_account_move_line_tax_lines:

:guilabel:`Tax Lines`:
    :Internal Name: ``tax_lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax_line`

    The *Tax Lines*-field is used to store ...




Wizards
-------
:guilabel:`Reconcile Lines`:
    
:guilabel:`Unreconcile Lines`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_move_reconciliation:

Account Move Reconciliation Lines
=================================
:Model Name: ``account.move.reconciliation``
:Base Module: :ref:`account_module`

The *Account Move Reconciliation Lines*-model introduces the conception of ...

.. _account_move_reconciliation_fields:

Fields
------


.. _account_account_move_reconciliation_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_move_line`

    The *Lines*-field is used to store ...




.. _account_account_move_reconciliation_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: allowed
    :Delete: forbidden


:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax:

Account Tax
===========
:Model Name: ``account.tax``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Taxes`

    :menuselection:`Financial --> Configuration --> Taxes --> Taxes --> Taxes`

The *Account Tax*-model introduces the conception of ...

.. _account_tax_fields:

Fields
------


.. _account_account_tax_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_account_tax_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Type: :ref:`field_type_numeric`

    In company's currency




.. _account_account_tax_childs:

:guilabel:`Children`:
    :Internal Name: ``childs``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax`

    The children records in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_tax_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_tax_credit_note_account:

:guilabel:`Credit Note Account`:
    :Internal Name: ``credit_note_account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Credit Note Account*-field is used to store ...




.. _account_account_tax_credit_note_base_code:

:guilabel:`Credit Note Base Code`:
    :Internal Name: ``credit_note_base_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Credit Note Base Code*-field is used to store ...




.. _account_account_tax_credit_note_base_sign:

:guilabel:`Credit Note Base Sign`:
    :Internal Name: ``credit_note_base_sign``
    :Type: :ref:`field_type_numeric`

    Usualy 1 or -1




.. _account_account_tax_credit_note_tax_code:

:guilabel:`Credit Note Tax Code`:
    :Internal Name: ``credit_note_tax_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Credit Note Tax Code*-field is used to store ...




.. _account_account_tax_credit_note_tax_sign:

:guilabel:`Credit Note Tax Sign`:
    :Internal Name: ``credit_note_tax_sign``
    :Type: :ref:`field_type_numeric`

    Usualy 1 or -1




.. _account_account_tax_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The name that will be used in reports




.. _account_account_tax_group:

:guilabel:`Group`:
    :Internal Name: ``group``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_group`

    The *Group*-field is used to store ...




.. _account_account_tax_invoice_account:

:guilabel:`Invoice Account`:
    :Internal Name: ``invoice_account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Invoice Account*-field is used to store ...




.. _account_account_tax_invoice_base_code:

:guilabel:`Invoice Base Code`:
    :Internal Name: ``invoice_base_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Invoice Base Code*-field is used to store ...




.. _account_account_tax_invoice_base_sign:

:guilabel:`Invoice Base Sign`:
    :Internal Name: ``invoice_base_sign``
    :Type: :ref:`field_type_numeric`

    Usualy 1 or -1




.. _account_account_tax_invoice_tax_code:

:guilabel:`Invoice Tax Code`:
    :Internal Name: ``invoice_tax_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Invoice Tax Code*-field is used to store ...




.. _account_account_tax_invoice_tax_sign:

:guilabel:`Invoice Tax Sign`:
    :Internal Name: ``invoice_tax_sign``
    :Type: :ref:`field_type_numeric`

    Usualy 1 or -1




.. _account_account_tax_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_tax_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_tax_percentage:

:guilabel:`Percentage`:
    :Internal Name: ``percentage``
    :Type: :ref:`field_type_numeric`

    In %




.. _account_account_tax_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_account_tax_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Percentage`
    * :guilabel:`Fixed`
    * :guilabel:`None`

    The *Type*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_template:

Account Tax Template
====================
:Model Name: ``account.tax.template``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Taxes Templates`

The *Account Tax Template*-model introduces the conception of ...

.. _account_tax_template_fields:

Fields
------


.. _account_account_tax_template_account:

:guilabel:`Account Template`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The *Account Template*-field is used to store ...




.. _account_account_tax_template_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Type: :ref:`field_type_numeric`

    The *Amount*-field is used to store ...




.. _account_account_tax_template_childs:

:guilabel:`Children`:
    :Internal Name: ``childs``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax_template`

    The children records in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_tax_template_credit_note_account:

:guilabel:`Credit Note Account`:
    :Internal Name: ``credit_note_account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The *Credit Note Account*-field is used to store ...




.. _account_account_tax_template_credit_note_base_code:

:guilabel:`Credit Note Base Code`:
    :Internal Name: ``credit_note_base_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code_template`

    The *Credit Note Base Code*-field is used to store ...




.. _account_account_tax_template_credit_note_base_sign:

:guilabel:`Credit Note Base Sign`:
    :Internal Name: ``credit_note_base_sign``
    :Type: :ref:`field_type_numeric`

    The *Credit Note Base Sign*-field is used to store ...




.. _account_account_tax_template_credit_note_tax_code:

:guilabel:`Credit Note Tax Code`:
    :Internal Name: ``credit_note_tax_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code_template`

    The *Credit Note Tax Code*-field is used to store ...




.. _account_account_tax_template_credit_note_tax_sign:

:guilabel:`Credit Note Tax Sign`:
    :Internal Name: ``credit_note_tax_sign``
    :Type: :ref:`field_type_numeric`

    The *Credit Note Tax Sign*-field is used to store ...




.. _account_account_tax_template_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Description*-field is used to store ...




.. _account_account_tax_template_group:

:guilabel:`Group`:
    :Internal Name: ``group``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_group`

    The *Group*-field is used to store ...




.. _account_account_tax_template_invoice_account:

:guilabel:`Invoice Account`:
    :Internal Name: ``invoice_account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The *Invoice Account*-field is used to store ...




.. _account_account_tax_template_invoice_base_code:

:guilabel:`Invoice Base Code`:
    :Internal Name: ``invoice_base_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code_template`

    The *Invoice Base Code*-field is used to store ...




.. _account_account_tax_template_invoice_base_sign:

:guilabel:`Invoice Base Sign`:
    :Internal Name: ``invoice_base_sign``
    :Type: :ref:`field_type_numeric`

    The *Invoice Base Sign*-field is used to store ...




.. _account_account_tax_template_invoice_tax_code:

:guilabel:`Invoice Tax Code`:
    :Internal Name: ``invoice_tax_code``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code_template`

    The *Invoice Tax Code*-field is used to store ...




.. _account_account_tax_template_invoice_tax_sign:

:guilabel:`Invoice Tax Sign`:
    :Internal Name: ``invoice_tax_sign``
    :Type: :ref:`field_type_numeric`

    The *Invoice Tax Sign*-field is used to store ...




.. _account_account_tax_template_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_tax_template_percentage:

:guilabel:`Percentage`:
    :Internal Name: ``percentage``
    :Type: :ref:`field_type_numeric`

    The *Percentage*-field is used to store ...




.. _account_account_tax_template_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_account_tax_template_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Percentage`
    * :guilabel:`Fixed`
    * :guilabel:`None`

    The *Type*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_account_template:

Account Template
================
:Model Name: ``account.account.template``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> General Account -->
    Account Templates`

The *Account Template*-model introduces the conception of ...

.. _account_account_template_fields:

Fields
------


.. _account_account_account_template_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_account_template_taxes:

:guilabel:`Default Taxes`:
    :Internal Name: ``taxes``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_tax_template`

    The *Default Taxes*-field is used to store ...




.. _account_account_account_template_deferral:

:guilabel:`Deferral`:
    :Internal Name: ``deferral``
    :Type: :ref:`field_type_boolean`

    The *Deferral*-field is used to store ...




.. _account_account_account_template_kind:

:guilabel:`Kind`:
    :Internal Name: ``kind``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Other`
    * :guilabel:`Payable`
    * :guilabel:`Revenue`
    * :guilabel:`Receivable`
    * :guilabel:`Expense`
    * :guilabel:`View`

    The *Kind*-field is used to store ...




.. _account_account_account_template_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_account_template_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_account_template_reconcile:

:guilabel:`Reconcile`:
    :Internal Name: ``reconcile``
    :Type: :ref:`field_type_boolean`

    The *Reconcile*-field is used to store ...




.. _account_account_account_template_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_type_template`

    The *Type*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_account_type:

Account Type
============
:Model Name: ``account.account.type``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> General Account -->
    Account Types`

    :menuselection:`Financial --> Configuration --> General Account -->
    Account Types --> Account Types`

The *Account Type*-model introduces the conception of ...

.. _account_account_type_fields:

Fields
------


.. _account_account_account_type_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Amount*-field is used to store ...




.. _account_account_account_type_balance_sheet:

:guilabel:`Balance Sheet`:
    :Internal Name: ``balance_sheet``
    :Type: :ref:`field_type_boolean`

    The *Balance Sheet*-field is used to store ...




.. _account_account_account_type_childs:

:guilabel:`Children`:
    :Internal Name: ``childs``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_account_type`

    The children records in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_account_type_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_type_display_balance:

:guilabel:`Display Balance`:
    :Internal Name: ``display_balance``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Debit - Credit`
    * :guilabel:`Credit - Debit`

    The *Display Balance*-field is used to store ...




.. _account_account_account_type_income_statement:

:guilabel:`Income Statement`:
    :Internal Name: ``income_statement``
    :Type: :ref:`field_type_boolean`

    The *Income Statement*-field is used to store ...




.. _account_account_account_type_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_account_type_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_type`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_account_type_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_account_type_template:

Account Type Template
=====================
:Model Name: ``account.account.type.template``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> General Account -->
    Account Type Templates`

The *Account Type Template*-model introduces the conception of ...

.. _account_account_type_template_fields:

Fields
------


.. _account_account_account_type_template_balance_sheet:

:guilabel:`Balance Sheet`:
    :Internal Name: ``balance_sheet``
    :Type: :ref:`field_type_boolean`

    The *Balance Sheet*-field is used to store ...




.. _account_account_account_type_template_display_balance:

:guilabel:`Display Balance`:
    :Internal Name: ``display_balance``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Debit - Credit`
    * :guilabel:`Credit - Debit`

    The *Display Balance*-field is used to store ...




.. _account_account_account_type_template_income_statement:

:guilabel:`Income Statement`:
    :Internal Name: ``income_statement``
    :Type: :ref:`field_type_boolean`

    The *Income Statement*-field is used to store ...




.. _account_account_account_type_template_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_account_type_template_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_type_template`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_account_type_template_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_fiscalyear_close_fiscalyear_init:

Close Fiscal Year Init
======================
:Model Name: ``account.fiscalyear.close_fiscalyear.init``
:Base Module: :ref:`account_module`

The *Close Fiscal Year Init*-model introduces the conception of ...

.. _account_fiscalyear_close_fiscalyear_init_fields:

Fields
------


.. _account_account_fiscalyear_close_fiscalyear_init_close_fiscalyear:

:guilabel:`Fiscal Year to close`:
    :Internal Name: ``close_fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year to close*-field is used to store ...




.. _account_account_create_chart_account_account:

Create Chart Account Account
============================
:Model Name: ``account.account.create_chart_account.account``
:Base Module: :ref:`account_module`

The *Create Chart Account Account*-model introduces the conception of ...

.. _account_account_create_chart_account_account_fields:

Fields
------


.. _account_account_account_create_chart_account_account_account_template:

:guilabel:`Account Template`:
    :Internal Name: ``account_template``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The *Account Template*-field is used to store ...




.. _account_account_account_create_chart_account_account_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_create_chart_account_init:

Create Chart Account Init
=========================
:Model Name: ``account.account.create_chart_account.init``
:Base Module: :ref:`account_module`

The *Create Chart Account Init*-model introduces the conception of ...



.. _account_account_create_chart_account_properties:

Create Chart Account Properties
===============================
:Model Name: ``account.account.create_chart_account.properties``
:Base Module: :ref:`account_module`

The *Create Chart Account Properties*-model introduces the conception of ...

.. _account_account_create_chart_account_properties_fields:

Fields
------


.. _account_account_account_create_chart_account_properties_account_payable:

:guilabel:`Default Payable Account`:
    :Internal Name: ``account_payable``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Default Payable Account*-field is used to store ...




.. _account_account_account_create_chart_account_properties_account_receivable:

:guilabel:`Default Receivable Account`:
    :Internal Name: ``account_receivable``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Default Receivable Account*-field is used to store ...




.. _account_fiscalyear:

Fiscal Year
===========
:Model Name: ``account.fiscalyear``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Fiscal Years --> Fiscal
    Years`

The *Fiscal Year*-model introduces the conception of ...

.. _account_fiscalyear_fields:

Fields
------


.. _account_account_fiscalyear_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_fiscalyear_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_fiscalyear_out_credit_note_sequence:

:guilabel:`Customer Credit Note Sequence`:
    :Internal Name: ``out_credit_note_sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Customer Credit Note Sequence*-field is used to store ...




.. _account_account_fiscalyear_out_invoice_sequence:

:guilabel:`Customer Invoice Sequence`:
    :Internal Name: ``out_invoice_sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Customer Invoice Sequence*-field is used to store ...




.. _account_account_fiscalyear_end_date:

:guilabel:`Ending Date`:
    :Internal Name: ``end_date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Ending Date*-field is used to store ...




.. _account_account_fiscalyear_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_fiscalyear_periods:

:guilabel:`Periods`:
    :Internal Name: ``periods``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_period`

    The *Periods*-field is used to store ...




.. _account_account_fiscalyear_post_move_sequence:

:guilabel:`Post Move Sequence`:
    :Internal Name: ``post_move_sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence`

    The *Post Move Sequence*-field is used to store ...




.. _account_account_fiscalyear_start_date:

:guilabel:`Starting Date`:
    :Internal Name: ``start_date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Starting Date*-field is used to store ...




.. _account_account_fiscalyear_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Open`
    * :guilabel:`Close`

    The *State*-field is used to store ...




.. _account_account_fiscalyear_in_credit_note_sequence:

:guilabel:`Supplier Credit Note Sequence`:
    :Internal Name: ``in_credit_note_sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Supplier Credit Note Sequence*-field is used to store ...




.. _account_account_fiscalyear_in_invoice_sequence:

:guilabel:`Supplier Invoice Sequence`:
    :Internal Name: ``in_invoice_sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Supplier Invoice Sequence*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_journal:

Journal
=======
:Model Name: ``account.journal``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Journals --> Journals`

The *Journal*-model introduces the conception of ...

.. _account_journal_fields:

Fields
------


.. _account_account_journal_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_account_journal_update_posted:

:guilabel:`Allow cancelling moves`:
    :Internal Name: ``update_posted``
    :Type: :ref:`field_type_boolean`

    The *Allow cancelling moves*-field is used to store ...




.. _account_account_journal_centralised:

:guilabel:`Centralised counterpart`:
    :Internal Name: ``centralised``
    :Type: :ref:`field_type_boolean`

    The *Centralised counterpart*-field is used to store ...




.. _account_account_journal_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_journal_credit_account:

:guilabel:`Default Credit Account`:
    :Internal Name: ``credit_account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Default Credit Account*-field is used to store ...




.. _account_account_journal_debit_account:

:guilabel:`Default Debit Account`:
    :Internal Name: ``debit_account``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Default Debit Account*-field is used to store ...




.. _account_account_journal_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_journal_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence`

    The position of the record order in a list.



.. _account_account_journal_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`

    The *Type*-field is used to store ...




.. _account_account_journal_view:

:guilabel:`View`:
    :Internal Name: ``view``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal_view`

    The *View*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_journal_period:

Journal - Period
================
:Model Name: ``account.journal.period``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Entries --> Journals - Periods`

    :menuselection:`Financial --> Processing --> Close Journals - Periods`

    :menuselection:`Financial --> Reporting --> Journals - Periods`

The *Journal - Period*-model introduces the conception of ...

.. _account_journal_period_fields:

Fields
------


.. _account_account_journal_period_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_account_journal_period_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_account_journal_period_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_journal_period_period:

:guilabel:`Period`:
    :Internal Name: ``period``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Period*-field is used to store ...




.. _account_account_journal_period_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Open`
    * :guilabel:`Close`

    The *State*-field is used to store ...




Wizards
-------
:guilabel:`Close Journals - Periods`:
    
:guilabel:`Re-Open Journals - Periods`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: forbidden


:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_journal_type:

Journal Type
============
:Model Name: ``account.journal.type``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Journals --> Journal
    Types`

The *Journal Type*-model introduces the conception of ...

.. _account_journal_type_fields:

Fields
------


.. _account_account_journal_type_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_journal_type_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_journal_view:

Journal View
============
:Model Name: ``account.journal.view``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Journals --> Journal
    Views`

The *Journal View*-model introduces the conception of ...

.. _account_journal_view_fields:

Fields
------


.. _account_account_journal_view_columns:

:guilabel:`Columns`:
    :Internal Name: ``columns``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_journal_view_column`

    The *Columns*-field is used to store ...




.. _account_account_journal_view_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_journal_view_column:

Journal View Column
===================
:Model Name: ``account.journal.view.column``
:Base Module: :ref:`account_module`

The *Journal View Column*-model introduces the conception of ...

.. _account_journal_view_column_fields:

Fields
------


.. _account_account_open_aged_balance_init:

Open Aged Balance Init
======================
:Model Name: ``account.account.open_aged_balance.init``
:Base Module: :ref:`account_module`

The *Open Aged Balance Init*-model introduces the conception of ...

.. _account_account_open_aged_balance_init_fields:

Fields
------


.. _account_account_account_open_aged_balance_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_open_aged_balance_init_term1:

:guilabel:`First Term`:
    :Internal Name: ``term1``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_integer`

    The *First Term*-field is used to store ...




.. _account_account_account_open_aged_balance_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_account_account_open_aged_balance_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_account_account_open_aged_balance_init_term2:

:guilabel:`Second Term`:
    :Internal Name: ``term2``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_integer`

    The *Second Term*-field is used to store ...




.. _account_account_account_open_aged_balance_init_term3:

:guilabel:`Third Term`:
    :Internal Name: ``term3``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_integer`

    The *Third Term*-field is used to store ...




.. _account_account_account_open_aged_balance_init_balance_type:

:guilabel:`Type`:
    :Internal Name: ``balance_type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Customer`
    * :guilabel:`Supplier`
    * :guilabel:`Both`

    The *Type*-field is used to store ...




.. _account_account_account_open_aged_balance_init_unit:

:guilabel:`Unit`:
    :Internal Name: ``unit``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Day`
    * :guilabel:`Month`

    The *Unit*-field is used to store ...




.. _account_account_open_balance_sheet_init:

Open Balance Sheet Init
=======================
:Model Name: ``account.account.open_balance_sheet.init``
:Base Module: :ref:`account_module`

The *Open Balance Sheet Init*-model introduces the conception of ...

.. _account_account_open_balance_sheet_init_fields:

Fields
------


.. _account_account_account_open_balance_sheet_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_open_balance_sheet_init_date:

:guilabel:`Date`:
    :Internal Name: ``date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Date*-field is used to store ...




.. _account_account_account_open_balance_sheet_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_account_open_chart_account_init:

Open Chart Account Init
=======================
:Model Name: ``account.account.open_chart_account.init``
:Base Module: :ref:`account_module`

The *Open Chart Account Init*-model introduces the conception of ...

.. _account_account_open_chart_account_init_fields:

Fields
------


.. _account_account_account_open_chart_account_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    Leave empty for all open fiscal year




.. _account_account_account_open_chart_account_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_tax_open_chart_code_init:

Open Chart Code Init
====================
:Model Name: ``account.tax.open_chart_code.init``
:Base Module: :ref:`account_module`

The *Open Chart Code Init*-model introduces the conception of ...

.. _account_tax_open_chart_code_init_fields:

Fields
------


.. _account_account_tax_open_chart_code_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    Leave empty for all open fiscal year




.. _account_account_tax_open_chart_code_init_method:

:guilabel:`Method`:
    :Internal Name: ``method``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`By Fiscal Year`
    * :guilabel:`By Periods`

    The *Method*-field is used to store ...




.. _account_account_tax_open_chart_code_init_periods:

:guilabel:`Periods`:
    :Internal Name: ``periods``
    :Type: :ref:`field_type_many2many`
    :Relation Model: :ref:`account_tax_open_chart_code_init`

    Leave empty for all periods of all open fiscal year




.. _account_account_open_income_statement_init:

Open Income Statement Init
==========================
:Model Name: ``account.account.open_income_statement.init``
:Base Module: :ref:`account_module`

The *Open Income Statement Init*-model introduces the conception of ...

.. _account_account_open_income_statement_init_fields:

Fields
------


.. _account_account_account_open_income_statement_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_open_income_statement_init_end_period:

:guilabel:`End Period`:
    :Internal Name: ``end_period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *End Period*-field is used to store ...




.. _account_account_account_open_income_statement_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_account_account_open_income_statement_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_account_account_open_income_statement_init_start_period:

:guilabel:`Start Period`:
    :Internal Name: ``start_period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Start Period*-field is used to store ...




.. _account_move_open_journal_ask:

Open Journal Ask
================
:Model Name: ``account.move.open_journal.ask``
:Base Module: :ref:`account_module`

The *Open Journal Ask*-model introduces the conception of ...

.. _account_move_open_journal_ask_fields:

Fields
------


.. _account_account_move_open_journal_ask_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_account_move_open_journal_ask_period:

:guilabel:`Period`:
    :Internal Name: ``period``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Period*-field is used to store ...




.. _account_move_open_reconcile_lines_init:

Open Reconcile Lines Init
=========================
:Model Name: ``account.move.open_reconcile_lines.init``
:Base Module: :ref:`account_module`

The *Open Reconcile Lines Init*-model introduces the conception of ...

.. _account_move_open_reconcile_lines_init_fields:

Fields
------


.. _account_account_move_open_reconcile_lines_init_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_account_open_third_party_balance_init:

Open Third Party Balance Init
=============================
:Model Name: ``account.account.open_third_party_balance.init``
:Base Module: :ref:`account_module`

The *Open Third Party Balance Init*-model introduces the conception of ...

.. _account_account_open_third_party_balance_init_fields:

Fields
------


.. _account_account_account_open_third_party_balance_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_open_third_party_balance_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_account_account_open_third_party_balance_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_period:

Period
======
:Model Name: ``account.period``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Fiscal Years --> Fiscal
    Years --> Periods`

    :menuselection:`Financial --> Processing --> Close Periods`

The *Period*-model introduces the conception of ...

.. _account_period_fields:

Fields
------


.. _account_account_period_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_period_out_credit_note_sequence:

:guilabel:`Customer Credit Note Sequence`:
    :Internal Name: ``out_credit_note_sequence``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Customer Credit Note Sequence*-field is used to store ...




.. _account_account_period_out_invoice_sequence:

:guilabel:`Customer Invoice Sequence`:
    :Internal Name: ``out_invoice_sequence``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Customer Invoice Sequence*-field is used to store ...




.. _account_account_period_end_date:

:guilabel:`Ending Date`:
    :Internal Name: ``end_date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Ending Date*-field is used to store ...




.. _account_account_period_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_account_period_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_period_post_move_sequence:

:guilabel:`Post Move Sequence`:
    :Internal Name: ``post_move_sequence``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence`

    The *Post Move Sequence*-field is used to store ...




.. _account_account_period_start_date:

:guilabel:`Starting Date`:
    :Internal Name: ``start_date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Starting Date*-field is used to store ...




.. _account_account_period_state:

:guilabel:`State`:
    :Internal Name: ``state``
    :Attributes: :ref:`required`, :ref:`readonly`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Open`
    * :guilabel:`Close`

    The *State*-field is used to store ...




.. _account_account_period_in_credit_note_sequence:

:guilabel:`Supplier Credit Note Sequence`:
    :Internal Name: ``in_credit_note_sequence``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Supplier Credit Note Sequence*-field is used to store ...




.. _account_account_period_in_invoice_sequence:

:guilabel:`Supplier Invoice Sequence`:
    :Internal Name: ``in_invoice_sequence``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`ir_sequence_strict`
    :Base Module: :ref:`account_invoice_module`

    The *Supplier Invoice Sequence*-field is used to store ...




.. _account_account_period_type:

:guilabel:`Type`:
    :Internal Name: ``type``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_selection`


    The following options are available:

    * :guilabel:`Standard`
    * :guilabel:`Adjustment`

    The *Type*-field is used to store ...




Wizards
-------
:guilabel:`Close Periods`:
    
:guilabel:`Re-Open Periods`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_move_print_general_journal_init:

Print General Journal Init
==========================
:Model Name: ``account.move.print_general_journal.init``
:Base Module: :ref:`account_module`

The *Print General Journal Init*-model introduces the conception of ...

.. _account_move_print_general_journal_init_fields:

Fields
------


.. _account_account_move_print_general_journal_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_move_print_general_journal_init_from_date:

:guilabel:`From Date`:
    :Internal Name: ``from_date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *From Date*-field is used to store ...




.. _account_account_move_print_general_journal_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_account_move_print_general_journal_init_to_date:

:guilabel:`To Date`:
    :Internal Name: ``to_date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *To Date*-field is used to store ...




.. _account_account_print_general_ledger_init:

Print General Ledger
====================
:Model Name: ``account.account.print_general_ledger.init``
:Base Module: :ref:`account_module`

The *Print General Ledger*-model introduces the conception of ...

.. _account_account_print_general_ledger_init_fields:

Fields
------


.. _account_account_account_print_general_ledger_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_print_general_ledger_init_empty_account:

:guilabel:`Empty Account`:
    :Internal Name: ``empty_account``
    :Type: :ref:`field_type_boolean`

    With account without move




.. _account_account_account_print_general_ledger_init_end_period:

:guilabel:`End Period`:
    :Internal Name: ``end_period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *End Period*-field is used to store ...




.. _account_account_account_print_general_ledger_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_account_account_print_general_ledger_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_account_account_print_general_ledger_init_start_period:

:guilabel:`Start Period`:
    :Internal Name: ``start_period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Start Period*-field is used to store ...




.. _account_account_print_trial_balance_init:

Print Trial Balance Init
========================
:Model Name: ``account.account.print_trial_balance.init``
:Base Module: :ref:`account_module`

The *Print Trial Balance Init*-model introduces the conception of ...

.. _account_account_print_trial_balance_init_fields:

Fields
------


.. _account_account_account_print_trial_balance_init_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_account_print_trial_balance_init_empty_account:

:guilabel:`Empty Account`:
    :Internal Name: ``empty_account``
    :Type: :ref:`field_type_boolean`

    With account without move




.. _account_account_account_print_trial_balance_init_end_period:

:guilabel:`End Period`:
    :Internal Name: ``end_period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *End Period*-field is used to store ...




.. _account_account_account_print_trial_balance_init_fiscalyear:

:guilabel:`Fiscal Year`:
    :Internal Name: ``fiscalyear``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_fiscalyear`

    The *Fiscal Year*-field is used to store ...




.. _account_account_account_print_trial_balance_init_posted:

:guilabel:`Posted Move`:
    :Internal Name: ``posted``
    :Type: :ref:`field_type_boolean`

    Show only posted move




.. _account_account_account_print_trial_balance_init_start_period:

:guilabel:`Start Period`:
    :Internal Name: ``start_period``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_period`

    The *Start Period*-field is used to store ...




.. _account_move_reconcile_lines_writeoff:

Reconcile Lines Write-Off
=========================
:Model Name: ``account.move.reconcile_lines.writeoff``
:Base Module: :ref:`account_module`

The *Reconcile Lines Write-Off*-model introduces the conception of ...

.. _account_move_reconcile_lines_writeoff_fields:

Fields
------


.. _account_account_move_reconcile_lines_writeoff_account:

:guilabel:`Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Account*-field is used to store ...




.. _account_account_move_reconcile_lines_writeoff_date:

:guilabel:`Date`:
    :Internal Name: ``date``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_date`

    The *Date*-field is used to store ...




.. _account_account_move_reconcile_lines_writeoff_journal:

:guilabel:`Journal`:
    :Internal Name: ``journal``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_journal`

    The *Journal*-field is used to store ...




.. _account_tax_code:

Tax Code
========
:Model Name: ``account.tax.code``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Tax Codes`

    :menuselection:`Financial --> Configuration --> Taxes --> Tax Codes -->
    Tax Codes`

The *Tax Code*-model introduces the conception of ...

.. _account_tax_code_fields:

Fields
------


.. _account_account_tax_code_active:

:guilabel:`Active`:
    :Internal Name: ``active``
    :Type: :ref:`field_type_boolean`

    When not ticked the record is deactivated for future use. See section
    :ref:`general_concept_active_field`.



.. _account_account_tax_code_childs:

:guilabel:`Children`:
    :Internal Name: ``childs``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax_code`

    The children records in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_tax_code_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_tax_code_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_tax_code_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Type: :ref:`field_type_text`

    The *Description*-field is used to store ...




.. _account_account_tax_code_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_tax_code_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_tax_code_sum:

:guilabel:`Sum`:
    :Internal Name: ``sum``
    :Attributes: :ref:`readonly`
    :Type: :ref:`field_type_numeric`

    The *Sum*-field is used to store ...




Wizards
-------
:guilabel:`Open Tax Code`:
    


Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_code_template:

Tax Code Template
=================
:Model Name: ``account.tax.code.template``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Tax Codes
    Templates`

The *Tax Code Template*-model introduces the conception of ...

.. _account_tax_code_template_fields:

Fields
------


.. _account_account_tax_code_template_account:

:guilabel:`Account Template`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The *Account Template*-field is used to store ...




.. _account_account_tax_code_template_childs:

:guilabel:`Children`:
    :Internal Name: ``childs``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax_code_template`

    The children records in a tree-structure. See section
    :ref:`general_concept_tree`.



.. _account_account_tax_code_template_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_tax_code_template_description:

:guilabel:`Description`:
    :Internal Name: ``description``
    :Type: :ref:`field_type_text`

    The *Description*-field is used to store ...




.. _account_account_tax_code_template_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




.. _account_account_tax_code_template_parent:

:guilabel:`Parent`:
    :Internal Name: ``parent``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code_template`

    The parent record in a tree-structure. See section
    :ref:`general_concept_tree`.



Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_group:

Tax Group
=========
:Model Name: ``account.tax.group``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Tax Groups`

The *Tax Group*-model introduces the conception of ...

.. _account_tax_group_fields:

Fields
------


.. _account_account_tax_group_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Code*-field is used to store ...




.. _account_account_tax_group_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_line:

Tax Line
========
:Model Name: ``account.tax.line``
:Base Module: :ref:`account_module`

The *Tax Line*-model introduces the conception of ...

.. _account_tax_line_fields:

Fields
------


.. _account_account_tax_line_amount:

:guilabel:`Amount`:
    :Internal Name: ``amount``
    :Type: :ref:`field_type_numeric`

    The *Amount*-field is used to store ...




.. _account_account_tax_line_code:

:guilabel:`Code`:
    :Internal Name: ``code``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_code`

    The *Code*-field is used to store ...




.. _account_account_tax_line_move_line:

:guilabel:`Move Line`:
    :Internal Name: ``move_line``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_move_line`

    The *Move Line*-field is used to store ...




.. _account_account_tax_line_tax:

:guilabel:`Tax`:
    :Internal Name: ``tax``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax`

    The *Tax*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account" have the
following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: forbidden
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_rule:

Tax Rule
========
:Model Name: ``account.tax.rule``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Tax Rules`

The *Tax Rule*-model introduces the conception of ...

.. _account_tax_rule_fields:

Fields
------


.. _account_account_tax_rule_company:

:guilabel:`Company`:
    :Internal Name: ``company``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`company_company`

    The *Company*-field is used to store ...




.. _account_account_tax_rule_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax_rule_line`

    The *Lines*-field is used to store ...




.. _account_account_tax_rule_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_rule_line:

Tax Rule Line
=============
:Model Name: ``account.tax.rule.line``
:Base Module: :ref:`account_module`

The *Tax Rule Line*-model introduces the conception of ...

.. _account_tax_rule_line_fields:

Fields
------


.. _account_account_tax_rule_line_origin_tax:

:guilabel:`Original Tax`:
    :Internal Name: ``origin_tax``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax`

    If the original tax is filled, the rule will be applied only for this
    tax.




.. _account_account_tax_rule_line_rule:

:guilabel:`Rule`:
    :Internal Name: ``rule``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_rule`

    The *Rule*-field is used to store ...




.. _account_account_tax_rule_line_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_account_tax_rule_line_tax:

:guilabel:`Substitution Tax`:
    :Internal Name: ``tax``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax`

    The *Substitution Tax*-field is used to store ...




.. _account_account_tax_rule_line_group:

:guilabel:`Tax Group`:
    :Internal Name: ``group``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_group`

    The *Tax Group*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
:ref:`res_user`\ s being member of :ref:`res_group` "Account Administration"
have the following access permissions:

    :Read: allowed
    :Write: allowed
    :Create: allowed
    :Delete: allowed


All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_rule_line_template:

Tax Rule Line Template
======================
:Model Name: ``account.tax.rule.line.template``
:Base Module: :ref:`account_module`

The *Tax Rule Line Template*-model introduces the conception of ...

.. _account_tax_rule_line_template_fields:

Fields
------


.. _account_account_tax_rule_line_template_origin_tax:

:guilabel:`Original Tax`:
    :Internal Name: ``origin_tax``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_template`

    If the original tax template is filled, the rule will be applied only
    for this tax template.




.. _account_account_tax_rule_line_template_rule:

:guilabel:`Rule`:
    :Internal Name: ``rule``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_rule_template`

    The *Rule*-field is used to store ...




.. _account_account_tax_rule_line_template_sequence:

:guilabel:`Sequence`:
    :Internal Name: ``sequence``
    :Type: :ref:`field_type_integer`

    The position of the record order in a list.



.. _account_account_tax_rule_line_template_tax:

:guilabel:`Substitution Tax`:
    :Internal Name: ``tax``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_template`

    The *Substitution Tax*-field is used to store ...




.. _account_account_tax_rule_line_template_group:

:guilabel:`Tax Group`:
    :Internal Name: ``group``
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_tax_group`

    The *Tax Group*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_tax_rule_template:

Tax Rule Template
=================
:Model Name: ``account.tax.rule.template``
:Base Module: :ref:`account_module`

:Menu:
    :menuselection:`Financial --> Configuration --> Taxes --> Tax Rule
    Templates`

The *Tax Rule Template*-model introduces the conception of ...

.. _account_tax_rule_template_fields:

Fields
------


.. _account_account_tax_rule_template_account:

:guilabel:`Account Template`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account_template`

    The *Account Template*-field is used to store ...




.. _account_account_tax_rule_template_lines:

:guilabel:`Lines`:
    :Internal Name: ``lines``
    :Type: :ref:`field_type_one2many`
    :Relation Model: :ref:`account_tax_rule_line_template`

    The *Lines*-field is used to store ...




.. _account_account_tax_rule_template_name:

:guilabel:`Name`:
    :Internal Name: ``name``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_char`

    The *Name*-field is used to store ...




Access
------
The manipulation of records in this model is controlled by
:ref:`ir_model_access` entries.
All other :ref:`res_user`\ s have these access permissions:

    :Read: allowed
    :Write: forbidden
    :Create: forbidden
    :Delete: forbidden



.. _account_move_unreconcile_lines_init:

Unreconcile Lines Init
======================
:Model Name: ``account.move.unreconcile_lines.init``
:Base Module: :ref:`account_module`

The *Unreconcile Lines Init*-model introduces the conception of ...



.. _account_account_update_chart_account_init:

Update Chart Account from Template Init
=======================================
:Model Name: ``account.account.update_chart_account.init``
:Base Module: :ref:`account_module`

The *Update Chart Account from Template Init*-model introduces the conception
of ...

.. _account_account_update_chart_account_init_fields:

Fields
------


.. _account_account_account_update_chart_account_init_account:

:guilabel:`Root Account`:
    :Internal Name: ``account``
    :Attributes: :ref:`required`
    :Type: :ref:`field_type_many2one`
    :Relation Model: :ref:`account_account`

    The *Root Account*-field is used to store ...




.. _account_account_update_chart_account_start:

Update Chart Account from Template Start
========================================
:Model Name: ``account.account.update_chart_account.start``
:Base Module: :ref:`account_module`

The *Update Chart Account from Template Start*-model introduces the conception
of ...

